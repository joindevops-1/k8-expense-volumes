apiVersion: v1
kind: ConfigMap
metadata:
  name: frontend
  namespace: expense
data:
  nginx.conf: |
    user www-data;
    worker_processes 4;
    pid /var/run/nginx.pid;

    events {
      worker_connections 768;
      # multi_accept on;
    }

    http {

      ##
      # Basic Settings
      ##

      sendfile on;
      tcp_nopush on;
      tcp_nodelay on;
      keepalive_timeout 65;
      types_hash_max_size 2048;
      large_client_header_buffers 6 32k;
      client_max_body_size 100m;

      # server_names_hash_bucket_size 64;
      # server_name_in_redirect off;
      include /etc/nginx/mime.types;
      default_type application/octet-stream;

      ##
      # Logging Settings
      ##
      access_log /var/log/nginx/access.log;
      error_log /var/log/nginx/error.log debug; # change from debug to warn or error for production

      ##
      # Gzip Settings
      ##
      gzip on;
      gzip_disable "msie6";

      ##
      # Virtual Host Configs
      ##

      include /etc/nginx/conf.d/*.conf;
      include /etc/nginx/sites-enabled/*;

      server {
        listen       8080;
        server_name  localhost;

        proxy_http_version 1.1;

        #charset koi8-r;
        #access_log  /var/log/nginx/host.access.log  main;
        #error_log /dev/stdout debug;
        #rewrite_log on;

        location / {
            root   /usr/share/nginx/html;
            index  index.html index.htm;
            ssi    on;
        }

        location /images/ {
            expires 5s;
            root   /usr/share/nginx/html;
            try_files $uri /images/placeholder.png;
        }

        #error_page  404              /404.html;

        # redirect server error pages to the static page /50x.html
        #
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   /usr/share/nginx/html;
        }

        location /api/ { 
            proxy_pass http://backend:8080/;
        }

        }

    }
---
kind: Deployment
apiVersion: apps/v1
metadata:
  name: frontend
  namespace: expense
  # these labels are deployment related labels
  labels:
    component: frontend
    project: expense
    tier: web
spec:
  replicas: 2
  selector:
    matchLabels:
      component: frontend
      project: expense
      tier: web
  # pod definition
  template:
    metadata:
      labels:
        component: frontend
        project: expense
        tier: web
    spec:
      containers:
      - name: frontend
        image: joindevops/frontend:v1.0
        envFrom:
        - configMapRef:
            name: backend
        volumeMounts:
        - name: nginx-conf
          mountPath: /etc/nginx/nginx.conf
          subPath: nginx.conf
          readOnly: true
        # envFrom:
        # - configMapRef:
        #     name: frontend
      volumes:
      - name: nginx-conf
        configMap:
          name: frontend
          items:
          - key: nginx.conf
            path: nginx.conf

---
apiVersion: v1
kind: Service
metadata:
  name: frontend
  namespace: expense
spec:
  selector:
    component: frontend
    project: expense
    tier: web
  ports:
  - protocol: TCP
    port: 80 #service-port
    targetPort: 8080 #target-port
---
# apiVersion: networking.k8s.io/v1
# kind: Ingress
# metadata:
#   name: frontend
#   namespace: expense
#   annotations:
#     alb.ingress.kubernetes.io/scheme: internet-facing
#     alb.ingress.kubernetes.io/target-type: ip
#     alb.ingress.kubernetes.io/tags: Environment=dev,Team=test,Project=Expense
#     alb.ingress.kubernetes.io/group.name: joindevops
#     alb.ingress.kubernetes.io/security-groups: sg-0cd5dc7154cd79726
#     alb.ingress.kubernetes.io/subnets: subnet-07bb249facab22f8b,subnet-00803564754562ce8
#     alb.ingress.kubernetes.io/certificate-arn: arn:aws:acm:us-east-1:315069654700:certificate/ccb0fc81-40d5-4478-b612-05c89f887da7
# spec:
#   ingressClassName: alb
#   rules:
#   - host: "expense.daws78s.online"
#     http:
#       paths:
#       - pathType: Prefix
#         path: "/"
#         backend:
#           service:
#             name: frontend
#             port:
#               number: 80

apiVersion: elbv2.k8s.aws/v1beta1
kind: TargetGroupBinding
metadata:
  name: frontend
  namespace: expense
spec:
  serviceRef:
    name: frontend
    port: 80
  targetGroupARN: arn:aws:elasticloadbalancing:us-east-1:315069654700:targetgroup/expense-dev-web-alb/d6564254a6df7293
  targetType: ip